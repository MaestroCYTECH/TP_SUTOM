version: "3.7"

services:
  score_service:
    build:
        context: .
        args:
            - NODE_ENV=local
        dockerfile: Dockerfile.score
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - index_service

  index_service:
    build:
        context: .
        args:
            - NODE_ENV=local
        #environment:
       #   - LOKI=http://loki:4100/
        dockerfile: Dockerfile.index
    ports:
      - "8080:8080"
    restart: always

  auth_service:
    build:
        context: .
        args:
            - NODE_ENV=local
        dockerfile: Dockerfile.auth
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - index_service

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 4000:4000
    restart: unless-stopped

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - 4100:4100
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    ports:
      - 9090:9090

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9200
    ports:
      - 9200:9200

